 - platform: mqtt
   state_topic: "sensor/bedoccupancy"
   name: 'Bed Mats Occupied'
   value_template: '{{ value_json.data[0] }}'
   payload_on: "1"
   payload_off: "0"
   device_class: occupancy
 - platform: mqtt
   state_topic: "sensor/bedoccupancy"
   name: 'Bed Mikael Occupied'
   value_template: '{{ value_json.data[1] }}'
   payload_on: "1"
   payload_off: "0"
   device_class: occupancy
 - platform: template
   sensors:
     everyone_in_bed:
       friendly_name: "Everyone at home is in bed"
       device_class: occupancy
       entity_id:
        - binary_sensor.mats
        - binary_sensor.mikael
        - binary_sensor.bed_mikael_occupied
        - binary_sensor.bed_mats_occupied
       value_template: >-
         {{ 
            (
             is_state('binary_sensor.mats', 'off') 
            and 
             is_state('binary_sensor.mikael', 'on') 
            and 
             is_state('binary_sensor.bed_mikael_occupied', 'on') 
            )
           or
            (
             is_state('binary_sensor.mats', 'on') 
            and 
             is_state('binary_sensor.bed_mats_occupied', 'on') 
            and 
             is_state('binary_sensor.mikael', 'off') 
            )
           or
            (
             is_state('binary_sensor.mats', 'on') 
            and 
             is_state('binary_sensor.bed_mats_occupied', 'on') 
            and 
             is_state('binary_sensor.mikael', 'on') 
            and 
             is_state('binary_sensor.bed_mikael_occupied', 'on') 
            )
          }}
 - platform: template
   sensors:
     mats:
       friendly_name: "Mats"
       device_class: presence
       value_template: "{{ is_state('device_tracker.matspixel2', 'home') }}"
 - platform: template
   sensors:
     mikael:
       friendly_name: "Mikael"
       device_class: presence
       value_template: "{{ is_state('device_tracker.mikaelsiphone', 'home') }}"
