homeassistant:
  # Name of the location where Home Assistant is running
  name: Fredriksson Home
  # Location required to calculate the time the sun rises and sets
  latitude: 59.317663
  longitude: 18.058044
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 11
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Stockholm
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
# introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123
  ssl_certificate: /etc/letsencrypt/live/gurkautomat.com/fullchain.pem
  ssl_key: /etc/letsencrypt/live/gurkautomat.com/privkey.pem

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
#conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

# Weather prediction
sensor: !include sensors.yaml


binary_sensor:
 - platform: template
   sensors:
     bed_mats_occupied:
       friendly_name: "Bed Mats is occupied"
       value_template: "{{ states('sensor.bed_mats')|float > 500 }}"
       device_class: occupancy
 - platform: template
   sensors:
     bed_mikael_occupied:
       friendly_name: "Bed Mikael is occupied"
       value_template: "{{ states('sensor.bed_mikael')|float > 500 }}"
       device_class: occupancy
 - platform: template
   sensors:
     everyone_in_bed:
       friendly_name: "Everyone at home is in bed"
       device_class: occupancy
       entity_id:
        - binary_sensor.mats
        - binary_sensor.mikael
        - binary_sensor.bed_mikael_occupied
        - binary_sensor.bed_mats_occupied
       value_template: >-
         {{ 
            (
             is_state('binary_sensor.mats', 'off') 
            and 
             is_state('binary_sensor.mikael', 'on') 
            and 
             is_state('binary_sensor.bed_mikael_occupied', 'on') 
            )
           or
            (
             is_state('binary_sensor.mats', 'on') 
            and 
             is_state('binary_sensor.bed_mats_occupied', 'on') 
            and 
             is_state('binary_sensor.mikael', 'off') 
            )
           or
            (
             is_state('binary_sensor.mats', 'on') 
            and 
             is_state('binary_sensor.bed_mats_occupied', 'on') 
            and 
             is_state('binary_sensor.mikael', 'on') 
            and 
             is_state('binary_sensor.bed_mikael_occupied', 'on') 
            )
          }}
 - platform: template
   sensors:
     mats:
       friendly_name: "Mats"
       device_class: presence
       value_template: "{{ is_state('device_tracker.matspixel2', 'home') }}"
 - platform: template
   sensors:
     mikael:
       friendly_name: "Mikael"
       device_class: presence
       value_template: "{{ is_state('device_tracker.galaxys8', 'home') }}"

    
# Text to speech
#tts:
#  - platform: google

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

light:
 - platform: hue
   host: Philips-hue
 - platform: template
   lights:
     balkong_light:
       friendly_name: "Balkong ljusslinga"
       turn_on:
         service: switch.turn_on
         entity_id: switch.balkong_ljusslinga_switch_switch
       turn_off:
         service: switch.turn_off
         entity_id: switch.balkong_ljusslinga_switch_switch
       value_template:
         "{{ is_state('switch.balkong_ljusslinga_switch_switch', 'on') }}"
     living_room_switch_light:
       friendly_name: "Vardagsrum switch"
       turn_on:
         service: switch.turn_on
         entity_id: switch.vardagsrum_switch_switch
       turn_off:
         service: switch.turn_off
         entity_id: switch.vardagsrum_switch_switch
       value_template:
         "{{ is_state('switch.vardagsrum_switch_switch', 'on') }}"


device_tracker:
 - platform: unifi
   username: serviceaccount
   password: !secret unifi_password
   verify_ssl: false
   track_new_devices: false

media_player:
 - platform: webostv
   host: LGWebOSTV
   name: Living Room TV

mqtt:
  broker: ubuntuserver

zwave:
  network_key:
    "0xA1, 0x69, 0xFC, 0xCD, 0x67, 0x76, 0x8F, 0xAB, 0x7E, 0x0F, 0xBB, 0xC4, 0x0A, 0x28, 0xF5, 0x6A"

ios:

